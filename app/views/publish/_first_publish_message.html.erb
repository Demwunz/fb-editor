<p id="first-publish-alert-<%=environment %>" role="alert"
                            class="text-error"
                            data-default-message="<%= t('publish.first_publish_warning') %>"
                            data-success-message="<%= t('publish.first_publish_success') %>"
                            data-success-class="text-success">

</p>

<script>
  $(function() {
      var $alert = $("#first-publish-alert-<%=environment%>");
      var successClass = $alert.data('success-class');
      var successMessage = $alert.data('success-message');
      var defaultMessage =  $alert.data('default-message');
      var alreadyLive;
      var livenessChecks = 0;

      // Check if the service is live
      // Due to the fickleness of the DNS checks.  We do a couple of checks to see
      // if the service is already live.  If we get at least one 200, we say it is live.
      var livenessCheck = setInterval( function() {
        $.get('<%= api_service_first_publish_path(service_id, environment) %>', function() {
          console.log('live');
          livenessChecks++;
          alreadyLive = true;
        }).fail(function(){
          livenessChecks++;
          console.log('not live yet');
        });

        console.log(livenessChecks);

        if( livenessChecks >= 3) {
          clearInterval(livenessCheck);
          console.log(alreadyLive);
        if(alreadyLive != undefined && alreadyLive != true) {
        console.log('definitely not live');
        var successCount = 0;

        // Show default message
        $alert.text(defaultMessage);

          // Start polling for when service is live
          // Again, due to the slight fickleness of DNS propagation / resolution
          // we require several consecutive success before we consider the service live
          var publishedCheck = setInterval( function() {
              $.get('<%= api_service_first_publish_path(service_id, environment) %>', function() {
                successCount++;
                if(successCount >= 10) {
                  $alert.removeClass().addClass(successClass).text(successMessage);
                  clearInterval(publishedCheck);
                }
              }).fail(function(){
                successCount = 0;
              });
            }, 10000);
      }
        }
      }, 250);


  });
</script>
